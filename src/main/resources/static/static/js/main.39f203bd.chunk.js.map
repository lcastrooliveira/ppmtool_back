{"version":3,"sources":["actions/types.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/layout/Header.js","components/project/ProjectItem.js","actions/projectActions.js","components/project/CreateProjectButton.js","components/Dashboard.js","components/project/AddProject.js","components/project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["GET_ERRORS","initialState","projects","project","projectTasks","projectTask","user","validToken","booleanActionPayload","payload","combineReducers","errors","state","action","type","filter","projectIdentifier","backlog","projectSequence","security","middleware","thunk","ReactReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","setJWToken","token","axios","defaults","headers","common","logout","dispatch","localStorage","removeItem","Header","props","location","href","headerLinks","this","userIsAuthenticated","className","id","to","fullName","onClick","userIsNotAuthenticated","data-toggle","data-target","Component","connect","ProjectItem","onDeleteClick","deleteProject","projectName","description","bind","a","async","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","map","key","get","res","data","AddProject","onChange","e","setState","target","name","value","onSubmit","preventDefault","newProject","startDate","endDate","createProject","history","nextProps","classnames","placeholder","post","push","response","UpdateProject","updateProject","match","params","getProject","disabled","put","ProjectTask","backlogId","ptId","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","pt","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","boardContent","console","log","projectNotFound","role","boardAlgorithm","AddProjectTask","newTask","dueDate","addProjectTask","UpdateProjectTask","updatedProjectTask","updateProjectTask","getProjectTask","patch","Landing","Register","newUser","username","password","confirmPassword","createNewUser","Login","loginRequest","login","setItem","setJWTToken","decoded","jwt_decode","component","otherProps","render","jwtToken","decodedJwtToken","currentTime","Date","now","exp","App","exact","path","SecureRoute","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.39f203bd.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n// Types for Backlog Actions\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"CURRENT_USER\";\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECT, GET_PROJECTS, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return { ...state, projects: action.payload };\n    case GET_PROJECT:\n      return { ...state, project: action.payload };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project.projectIdentifier !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"../actions/types\";\n\nconst initialState = {\n  projectTasks: [],\n  projectTask: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        projectTasks: action.payload,\n      };\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        projectTask: action.payload,\n      };\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        projectTasks: state.projectTasks.filter(\n          (projectTask) => projectTask.projectSequence !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  user: {},\n  validToken: false,\n};\n\nconst booleanActionPayload = (payload) => {\n  if (payload) {\n    return true;\n  } else return false;\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import axios from \"axios\";\n\nconst setJWToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWToken from \"../securityUtils/setJWTToken\";\n\nexport const createNewUser = (newUser, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\nexport const login = (loginRequest) => async (dispatch) => {\n  try {\n    const res = await axios.post(\"/users/login\", loginRequest);\n    const { token } = res.data;\n    localStorage.setItem(\"jwtToken\", token);\n    setJWTToken(token);\n    const decoded = jwt_decode(token);\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded,\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWToken(false);\n  dispatch({\n    type: GET_ERRORS,\n    payload: {},\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout = () => {\n    this.props.logout();\n    window.location.href = \"/\";\n  };\n\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"#\" onClick={this.logout}>\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = (id) => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\">Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\">Update Project Info</i>\n                  </li>\n                </Link>\n\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\">Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const updateProject = (project, history) => async (dispatch) => {\n  try {\n    await axios.put(`/project/${project.projectIdentifier}`, project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjects = () => async (dispatch) => {\n  const res = await axios.get(\"/project/all\");\n  dispatch({ type: GET_PROJECTS, payload: res.data });\n};\n\nexport const getProject = (id, history) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/project/${id}`);\n    dispatch({ type: GET_PROJECT, payload: res.data });\n  } catch {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = (id) => async (dispatch) => {\n  if (window.confirm(\"Are you sure ? This will delete all the project data\")) {\n    await axios.delete(`/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id,\n    });\n  }\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./project/ProjectItem\";\nimport CreateProjectButton from \"./project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <br />\n              <CreateProjectButton />\n              <hr />\n              {projects.map((project) => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({ project: state.project });\n\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate\n    };\n    this.props.createProject(newProject, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Create Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectIdentifier\n                    })}\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectIdentifier && (\n                    <div className=\"invalid-feedback\">\n                      {errors.projectIdentifier}\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"startDate\"\n                    value={this.state.startDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"endDate\"\n                    value={this.state.endDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return { errors: state.errors };\n};\n\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","import React, { Component } from \"react\";\nimport { getProject, updateProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      errors: {},\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      startDate,\n      endDate,\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      startDate,\n      endDate,\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n    };\n    this.props.updateProject(updateProject, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName,\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    value={this.state.startDate}\n                    name=\"startDate\"\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"endDate\"\n                    value={this.state.endDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  updateProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return { project: state.project.project, errors: state.errors };\n};\n\nexport default connect(mapStateToProps, { getProject, updateProject })(\n  UpdateProject\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick = (backlogId, ptId) => {\n    this.props.deleteProjectTask(backlogId, ptId);\n  };\n  render() {\n    const { projectTask } = this.props;\n    let priorityString;\n    let priorityClass;\n    if (projectTask.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    } else if (projectTask.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    } else if (projectTask.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {projectTask.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{projectTask.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {projectTask.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${projectTask.projectIdentifier}/${projectTask.projectSequence}`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              projectTask.projectIdentifier,\n              projectTask.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"./types\";\n\nexport const addProjectTask = (backlogId, projectTask, history) => async (\n  dispatch\n) => {\n  try {\n    await axios.post(`/backlog/${backlogId}`, projectTask);\n    history.push(`/projectBoard/${backlogId}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\nexport const getBacklog = (backlogId) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/backlog/${backlogId}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\nexport const getProjectTask = (backlogId, ptId, history) => async (\n  dispatch\n) => {\n  try {\n    const res = await axios.get(`/backlog/${backlogId}/${ptId}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data,\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlogId,\n  ptId,\n  projectTask,\n  history\n) => async (dispatch) => {\n  try {\n    await axios.patch(`/backlog/${backlogId}/${ptId}`, projectTask);\n    history.push(`/projectBoard/${backlogId}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlogId, ptId) => async (dispatch) => {\n  if (window.confirm(`You are deleting project task ${ptId}. Are you sure ?`)) {\n    await axios.delete(`/backlog/${backlogId}/${ptId}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: ptId,\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { projectTasks } = this.props;\n\n    const tasks = projectTasks.map((pt) => (\n      <ProjectTask key={pt.id} projectTask={pt} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.projectTask.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      } else if (tasks[i].props.projectTask.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      } else if (tasks[i].props.projectTask.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  // constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {},\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { projectTasks } = this.props.backlog;\n    const { errors } = this.state;\n    const boardAlgorithm = (errors, projectTasks) => {\n      if (projectTasks.length < 1) {\n        console.log(errors);\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog projectTasks={projectTasks} />;\n      }\n    };\n    let boardContent = boardAlgorithm(errors, projectTasks);\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {boardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  backlog: state.backlog,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n    };\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  };\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.props;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport {\n  getProjectTask,\n  updateProjectTask,\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      projectIdentifier: \"\",\n      priority: \"\",\n      dueDate: {},\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    const { backlogId, ptId } = this.props.match.params;\n    this.props.getProjectTask(backlogId, ptId, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      projectIdentifier,\n      priority,\n      dueDate,\n    } = nextProps.projectTask;\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      projectIdentifier,\n      priority,\n      dueDate,\n    });\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const updatedProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      projectIdentifier: this.state.projectIdentifier,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n    };\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      updatedProjectTask,\n      this.props.history\n    );\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n                {this.state.projectSequence}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  projectTask: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  projectTask: state.backlog.projectTask,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Management Tools\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start your own\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                  Sign Up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, {})(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      fullName: \"\",\n      confirmPassword: \"\",\n      errors: {},\n    };\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      password: this.state.password,\n      fullName: this.state.fullName,\n      confirmPassword: this.state.confirmPassword,\n    };\n    this.props.createNewUser(newUser, this.props.history);\n  };\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName,\n                    })}\n                    placeholder=\"Full name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address (username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { username, password } = this.state;\n    const loginRequest = {\n      username: username,\n      password: password,\n    };\n    this.props.login(loginRequest);\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={(props) =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({ security: state.security });\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport jwt_decode from \"jwt-decode\";\n\nimport Header from \"./components/layout/Header\";\nimport Dashboard from \"./components/Dashboard\";\nimport AddProject from \"./components/project/AddProject\";\nimport UpdateProject from \"./components/project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport setJWToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecureRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWToken(jwtToken);\n  const decodedJwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decodedJwtToken,\n  });\n  const currentTime = Date.now() / 1000;\n  if (decodedJwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          {\n            // Public routes\n          }\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          {\n            // private routes\n          }\n          <Switch>\n            <SecureRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecureRoute exact path=\"/addProject\" component={AddProject} />\n            <SecureRoute\n              exact\n              path=\"/updateProject/:id\"\n              component={UpdateProject}\n            />\n            <SecureRoute\n              exact\n              path=\"/projectBoard/:id\"\n              component={ProjectBoard}\n            />\n            <SecureRoute\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <SecureRoute\n              exact\n              path=\"/updateProjectTask/:backlogId/:ptId\"\n              component={UpdateProjectTask}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}